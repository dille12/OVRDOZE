import unittest
from core.jit_tools import *
from core.render_los_image_jit import *

class TestJit(unittest.TestCase):
    def test_jit_los(self):


        a1 = np.array([[0.2216534072836721, 2380.6260192265313, 234.83601728992772, 2500.0, 0.2686030246351711, 2352.144219120791, 348.69084892818006, 2500.0, ],[0.2688030246351711, 2352.011478508218, 349.1729069422616, 2500.0, 0.3058584353940227, 1147.6490159713728, 66.0, 1346.2437557886758, ],[0.30605843539402267, 1146.8096269075024, 66.0, 1346.2437557886758, 0.352004102366704, 1144.9999999999998, 127.17022888006964, 1271.2710175253742, ],[0.35220410236670396, 1145.0, 127.44335652155316, 1271.2710175253742, 0.3549132378369125, 2285.9793938957964, 554.0013465065879, 2500.0, ],[0.35511323783691245, 2285.8055925072777, 554.4701674495029, 2500.0, 0.3926284937105559, 789.0, 36.08554481501893, 915.3239863567435, ],[0.3928284937105559, 789.0000000000001, 36.28406382301785, 915.3239863567435, 0.7056946525992418, 700.0, 331.27879438546563, 897.1978600063645, ],[0.7058946525992418, 700.0, 331.5405774203772, 897.1978600063645, 0.7224041247334528, 1056.8874073947254, 668.0, 1587.2406874825253, ],[0.7226041247334528, 1056.4379059865291, 668.0, 1587.2406874825253, 0.7547803515023629, 1056.0, 733.2184467750615, 1507.0570659401058, ],[0.7549803515023629, 1056.0, 733.6385088321406, 1507.0570659401058, 0.7597282899697199, 1754.3457135637937, 1407.0400034521929, 2500.0, ],[0.7599282899697198, 1754.0013150776972, 1407.402480598977, 2500.0, 0.8829691016511715, 255.48527831589413, 67.0, 522.1206757062969, ],[0.8831691016511715, 255.35739268739863, 67.0, 522.1206757062969, 0.9598202347983487, 255.0, 132.43669500221145, 519.003853550241, ],[0.9600202347983486, 255.0, 132.62709749431082, 519.003853550241, 1.1061542636497996, 166.23026476803082, 133.0, 521.4415115811169, ],[1.1063542636497996, 166.11822168712254, 133.0, 521.4415115811169, 1.2021368125702618, 166.0, 265.6056014659563, 560.2305329058744, ],[1.2023368125702618, 166.0, 265.9510856287789, 560.2305329058744, 1.2391421649189585, 257.1557096202087, 601.0, 982.724401854355, ],[1.2393421649189584, 257.0, 601.1428195773651, 999.4384673405361, 1.2602914983632665, 257.0, 667.552627859767, 999.4384673405361, ],[1.2604914983632665, 256.9267757965686, 667.9999999999999, 1007.670581092849, 1.3880417138803258, 123.42040135158848, 668.0, 1007.670581092849, ],[1.3882417138803258, 123.2171408741692, 668.0, 1007.670581092849, 1.4320798195436557, 79.00000000000001, 668.0317563994405, 1024.2040812260025, ],[1.4322798195436557, 79.0, 669.4691524932148, 1024.2040812260025, 1.4407082501811115, 266.0914752672995, 2164.1049976126947, 2500.0, ],[1.4409082501811115, 265.59569354846474, 2164.169808772504, 2500.0, 1.5171431451933757, 75.85639575767576, 2181.631350527251, 2500.0, ],[1.5173431451933757, 75.35711257298303, 2181.658114320885, 2500.0, 0.22145340728367213, 2380.735891889036, 234.3482386544784, 2500.0, ]])


        a2 = np.array([[0.2216534072836721, 2380.6260192265313, 234.83601728992772, 2500.0, 0.2686030246351711, 2352.144219120791, 348.69084892818006, 2500.0, ],[0.2688030246351711, 2352.011478508218, 349.1729069422616, 2500.0, 0.3058584353940227, 1147.6490159713728, 66.0, 1346.2437557886758, ],[0.30605843539402267, 1146.8096269075024, 66.0, 1346.2437557886758, 0.352004102366704, 1144.9999999999998, 127.17022888006964, 1271.2710175253742, ],[0.35220410236670396, 1145.0, 127.44335652155316, 1271.2710175253742, 0.3549132378369125, 2285.9793938957964, 554.0013465065879, 2500.0, ],[0.35511323783691245, 2285.8055925072777, 554.4701674495029, 2500.0, 0.3926284937105559, 789.0, 36.08554481501893, 915.3239863567435, ],[0.3928284937105559, 789.0000000000001, 36.28406382301785, 915.3239863567435, 0.7056946525992418, 700.0, 331.27879438546563, 897.1978600063645, ],[0.7058946525992418, 700.0, 331.5405774203772, 897.1978600063645, 0.7224041247334528, 1056.8874073947254, 668.0, 1587.2406874825253, ],[0.7226041247334528, 1056.4379059865291, 668.0, 1587.2406874825253, 0.7547803515023629, 1056.0, 733.2184467750615, 1507.0570659401058, ],[0.7549803515023629, 1056.0, 733.6385088321406, 1507.0570659401058, 0.7597282899697199, 1754.3457135637937, 1407.0400034521929, 2500.0, ],[0.7599282899697198, 1754.0013150776972, 1407.402480598977, 2500.0, 0.8829691016511715, 255.48527831589413, 67.0, 522.1206757062969, ],[0.8831691016511715, 255.35739268739863, 67.0, 522.1206757062969, 0.9598202347983487, 255.0, 132.43669500221145, 519.003853550241, ],[0.9600202347983486, 255.0, 132.62709749431082, 519.003853550241, 1.1061542636497996, 166.23026476803082, 133.0, 521.4415115811169, ],[1.1063542636497996, 166.11822168712254, 133.0, 521.4415115811169, 1.2021368125702618, 166.0, 265.6056014659563, 560.2305329058744, ],[1.2023368125702618, 166.0, 265.9510856287789, 560.2305329058744, 1.2391421649189585, 257.1557096202087, 601.0, 982.724401854355, ],[1.2393421649189584, 257.0, 601.1428195773651, 999.4384673405361, 1.2602914983632665, 257.0, 667.552627859767, 999.4384673405361, ],[1.2604914983632665, 256.9267757965686, 667.9999999999999, 1007.670581092849, 1.3880417138803258, 123.42040135158848, 668.0, 1007.670581092849, ],[1.3882417138803258, 123.2171408741692, 668.0, 1007.670581092849, 1.4320798195436557, 79.00000000000001, 668.0317563994405, 1024.2040812260025, ],[1.4322798195436557, 79.0, 669.4691524932148, 1024.2040812260025, 1.4407082501811115, 266.0914752672995, 2164.1049976126947, 2500.0, ],[1.4409082501811115, 265.59569354846474, 2164.169808772504, 2500.0, 1.5171431451933757, 75.85639575767576, 2181.631350527251, 2500.0, ],[1.5173431451933757, 75.35711257298303, 2181.658114320885, 2500.0, 0.22145340728367213, 2380.735891889036, 234.3482386544784, 2500.0, ]])


        player_pos = [-58.21221355950286, -314.7711827184913]
        #camera_pos = [623.8173302107729, 500]
        camera_pos = [100, 200]
        start_pos = [player_pos[0] - camera_pos[0], player_pos[1] - camera_pos[1]]
        walls =  np.array([
             [ 356,   67,  356,    0],
             [ 356,    0,  445 ,   0],
             [ 445,   67,  356  , 67],
             [ 445,    0,  445   ,67],
             [ 799,   66,  799,    0],
             [ 799,    0,  889 ,   0],
             [ 889,    0,  889  , 66],
             [ 889,   66,  799   ,66],
             [ 800,  200,  800,  532],
             [ 800,  200,  889 , 200],
             [ 889,  200,  889  ,266],
             [ 889,  266, 1066,  266],
             [1066,  266, 1066 , 334],
             [1245,  328, 1245  ,266],
             [1245,  266, 1422,  266],
             [1422,  266, 1422,  328],
             [1422,  328, 1245,  328],
             [ 355,  333,  355,  267],
             [ 355,  267,  443,  267],
             [ 443,  267,  443,  666],
             [ 266,  333,  355,  333],
             [ 266,  466,  266,  333],
             [ 266,  466,  355,  466],
             [   0,  466,    0,  334],
             [   0,  334,   88,  334],
             [  88,  334,   88,  466],
             [  88,  466,    0,  466],
             [ 889,  334, 1066,  334],
             [ 889,  334,  889,  532],
             [ 889,  532,  800,  532],
             [ 355,  666,  355,  466],
             [ 443,  666,  355,  666],
             [ 800,  868,  800,  734],
             [ 800,  734,  888,  734],
             [ 888,  734,  888,  868],
             [ 976,  868,  888,  868],
             [ 357,  868,  357,  801],
             [ 357,  801,  444,  801],
             [ 444,  801,  444,  868],
             [ 800,  868,  444,  868],
             [ 179,  934,  179,  868],
             [ 179,  868,  357,  868],
             [ 976,  868,  976,  934],
             [ 976,  934,  179,  934],
             [1156,  934, 1156,  868],
             [1156,  868, 1422,  868],
             [1422,  868, 1422,  934],
             [1422,  934, 1156,  934]])
        size1 = 1336, 768
        size = np.array(size1)
        l = pygame.display.set_mode(size1)
        l, triangles, t1 = draw(l, 1, camera_pos, player_pos, None, walls, size)
        for y in range(triangles.shape[1]):
            for x in range(triangles.shape[0]):

                value1 = round(triangles[x,y],2)
                value2 = round(triangles[x,y],2)

                print(value1, "==", value2, value1 == value2)
                self.assertAlmostEqual(value1, value2)
                self.assertEqual(value1, value2)
